_templates:
  common: &common
    timeout_in_minutes: 30
    retry:
      automatic:
        - exit_status: -1
          limit: 10
        - exit_status: "*"
          limit: 2
  benchmarks: &benchmarks
    timeout_in_minutes: 120
    retry:
      automatic: false
    soft_fail: true
    if: build.branch == "master"
    env:
      # BENCHMARKS_OFFICIAL is set from hooks/pre-command, based
      # on whether this is executing on the master branch.
      BENCHMARKS_DATASET: buildkite
      BENCHMARKS_PROJECT: gvisor-benchmarks
      BENCHMARKS_TABLE: benchmarks
      BENCHMARKS_UPLOAD: true
    agents:
      arch: "amd64"
      kvm: "true"
  netstack_test: &netstack_test
    env:
      PACKAGES: >
        ./pkg/tcpip
        ./pkg/tcpip/adapters/gonet
        ./pkg/tcpip/buffer
        ./pkg/tcpip/header
        ./pkg/tcpip/link/channel
        ./pkg/tcpip/network/ipv4
        ./pkg/tcpip/network/ipv6
        ./pkg/tcpip/stack
        ./pkg/tcpip/transport/icmp
        ./pkg/tcpip/transport/tcp
        ./pkg/tcpip/transport/udp
        ./pkg/waiter
env:
  # Force a clean checkout every time to avoid reuse of files between runs.
  BUILDKITE_CLEAN_CHECKOUT: true

steps:
  - <<: *common
    label: ":weight_lifter: Fsstress test"
    command: make fsstress-test
    agents:
      arch: "amd64"
      os: "ubuntu"
      kernel: "legacy"
  # Integration tests.
  - <<: *common
    label: ":docker: Docker tests (cgroupv1)"
    command: make docker-tests
    agents:
      arch: "amd64"
      os: "ubuntu"
      kernel: "legacy"
  - <<: *common
    label: ":goggles: Overlay tests"
    command: make overlay-tests
    agents:
      arch: "amd64"
      os: "ubuntu"
      kernel: "legacy"
  - <<: *common
    label: ":safety_pin: Host network tests"
    command: make hostnet-tests
    agents:
      arch: "amd64"
      os: "ubuntu"
      kernel: "legacy"
  - <<: *common
    label: ":satellite: SWGSO tests"
    command: make swgso-tests
    agents:
      arch: "amd64"
      os: "ubuntu"
      kernel: "legacy"
